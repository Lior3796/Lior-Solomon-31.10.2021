{"version":3,"sources":["logo.svg","redux/actions/types.js","components/features/toggleTheme/ToggleTheme.js","components/features/toggleUnit/ToggleUnit.js","components/features/header/Header.js","components/features/addButton/AddButton.js","components/features/removeButton/RemoveButton.js","components/features/buttons/Buttons.js","components/features/link/Link.js","components/features/sidebar/Sidebar.js","components/features/navbar/Navbar.js","components/service/service.js","components/features/search/Search.js","components/features/forecastsCard/ForecastsCard.js","components/pages/Weather.js","components/features/favoriteCard/FavoriteCard.js","components/pages/Favorites.js","components/features/location/Location.js","components/features/appRouter/AppRouter.js","components/features/container/Container.js","App.js","reportWebVitals.js","redux/reducers/favoriteReducer.js","redux/reducers/cityReducer.js","redux/reducers/forecastsReducer.js","redux/reducers/toggleReducer.js","redux/reducers/Index.js","index.js"],"names":["CHANGE_THEME","CHANGE_UNIT","CHANGE_CITY","UPDATE_FORCASTS","DEFAULT_FORCASTS","ADD_FAVORITE","DELETE_FAVORITE","ToggleTheme","dispatch","useDispatch","useState","theme","setTheme","ToggleButtonGroup","onChange","type","payload","console","log","className","ToggleButton","style","fontFamily","fontSize","marginRight","color","size","ToggleUnit","temp","setTemp","toggleTheme","useSelector","state","toggleReducer","onClick","Header","favoriteCity","setFavorite","useEffect","favoriteCities","JSON","parse","localStorage","getItem","filter","city","Key","length","getFavoriteCities","LocalizedName","AddButton","cityReducer","IconButton","RemoveButton","Buttons","Stack","direction","spacing","Link","pathname","text","navigate","useNavigate","ListItem","button","ListItemIcon","ListItemText","primary","Sidebar","anchor","left","setState","toggleDrawer","open","event","sidebarsLinks","Button","zIndex","SwipeableDrawer","onClose","onOpen","Box","sx","width","role","onKeyDown","List","map","link","key","Divider","Navbar","to","getCityWeather","fetch","process","then","res","json","getDailyForecasts","Search","chosenCity","setChosenCity","weatherHandler","a","cities","toast","cityListHandler","DailyForecasts","value","e","target","replace","RegExp","isValidValue","ForecastsCard","forecast","unit","toggleTemp","Temperature","Maximum","Minimum","IconPhrase","Day","currentDay","currentTime","Date","toLocaleString","weekday","slice","variants","transition","duration","delay","visible","opacity","y","hidden","convertFerToCel","fer","Math","floor","motion","div","Card","component","whileHover","scale","whileTap","CardContent","Typography","gutterBottom","variant","initial","animate","svg","Value","class","xmlns","viewBox","preserveAspectRatio","d","fill","Weather","forecastsReducer","getForecasts","forecasts","ForecastsCardContainer","x","FavoriteCard","changeForecasts","getWeather","weather","ApparentTemperature","Imperial","Metric","textAlign","CardActions","Favorites","withScriptjs","withGoogleMap","props","defaultZoom","defaultCenter","lat","lng","position","favoriteReducer","favorites","setFavorites","mapFavoritesCities","forEach","currentWeather","getFavorites","AppRouter","window","innerWidth","windowWidth","setWindowWidth","addEventListener","path","exact","element","Container","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","action","find","obj","filterdCities","WeatherText","mapForecasts","defualtForecasts","toggle","combineReducers","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.165206de.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// Toggle\r\nexport const CHANGE_THEME = \"CHANGE_THEME\";\r\nexport const CHANGE_UNIT = \"CHANGE_UNIT\";\r\n\r\n// city\r\nexport const CHANGE_CITY = \"CHANGE_CITY\";\r\nexport const UPDATE_CITY = \"UPDATE_CITY\";\r\nexport const CHANGE_TEMP = \"CHANGE_TEMP\";\r\n\r\n// forecasts\r\nexport const UPDATE_FORCASTS = \"UPDATE_FORCASTS\";\r\nexport const DEFAULT_FORCASTS = \"DEFAULT_FORCASTS\";\r\n\r\n\r\n// favorite \r\nexport const ADD_FAVORITE = \"ADD_FAVORITE\";\r\nexport const DELETE_FAVORITE = \"DELETE_FAVORITE\";\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport { CHANGE_THEME, CHANGE_UNIT } from '../../../redux/actions/types';\r\n\r\nexport const ToggleTheme = () => {\r\n    const dispatch = useDispatch();\r\n    const [theme, setTheme] = useState(true);\r\n\r\n    const handleChange = () => {\r\n        setTheme(!theme);\r\n        dispatch({ type: CHANGE_THEME, payload: theme });\r\n        console.log(\"clicked\")\r\n    };\r\n\r\n    return (\r\n        <ToggleButtonGroup\r\n            onChange={handleChange}\r\n            className={theme ? \"toggle-container-light\" : \"toggle-container-dark\"}\r\n        >\r\n            <ToggleButton style={{ fontFamily: \"Assistant\", fontSize: \"1.2rem\", marginRight: \"5px\" }} color=\"secondary\" size='medium'>Change theme</ToggleButton>\r\n\r\n        </ToggleButtonGroup >\r\n    );\r\n\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport { CHANGE_UNIT } from '../../../redux/actions/types';\r\nexport const ToggleUnit = () => {\r\n    const dispatch = useDispatch();\r\n    const [temp, setTemp] = useState(true);\r\n    const { toggleTheme } = useSelector(state => state.toggleReducer)\r\n    const changeUnit = () => {\r\n        setTemp(!temp);\r\n        dispatch({ type: CHANGE_UNIT, payload: temp })\r\n    };\r\n    return (\r\n        <ToggleButtonGroup\r\n            onClick={() => changeUnit()}\r\n            className={`toggle-container-${toggleTheme}`}\r\n        >\r\n            <ToggleButton style={{ fontFamily: \"Assistant\", fontSize: \"1.2rem\", marginRight: \"5px\" }} color=\"secondary\" size=\"medium\">Change Unit</ToggleButton>\r\n        </ToggleButtonGroup>\r\n    );\r\n\r\n\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport '../../styles/style.css';\r\n\r\nexport const Header = ({ favoriteCity }) => {\r\n\r\n    const [favorite, setFavorite] = useState('');\r\n    const getFavoriteCities = () => {\r\n        let favoriteCities = JSON.parse(localStorage.getItem(\"favoriteCities\"));\r\n        if (favoriteCities) {\r\n            favoriteCities = favoriteCities.filter((city) => city.Key === favoriteCity.Key);\r\n            if (favoriteCities.length !== 0) {\r\n                setFavorite('Favorite city');\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => getFavoriteCities(), [favoriteCity]);\r\n\r\n    return (\r\n        <div className=\"text-container\">\r\n            <h1 className=\"header\">{favoriteCity.LocalizedName || \"Favorite cities\"}</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport '../../styles/style.css';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ADD_FAVORITE } from '../../../redux/actions/types';\r\n\r\nexport const AddButton = () => {\r\n    const favoriteCity = useSelector(state => state.cityReducer);\r\n    const dispatch = useDispatch();\r\n    const addFavoriteCity = () => {\r\n        dispatch({ type: ADD_FAVORITE, payload: favoriteCity })\r\n    }\r\n    return (\r\n        <div>\r\n            <IconButton onClick={() => addFavoriteCity()} color=\"primary\" aria-label=\"add to shopping cart\">\r\n                <FavoriteIcon fontSize=\"large\" />\r\n            </IconButton>\r\n        </div>\r\n\r\n    );\r\n}\r\n","import React from 'react'\r\nimport '../../styles/style.css';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { DELETE_FAVORITE } from '../../../redux/actions/types';\r\n\r\nexport const RemoveButton = () => {\r\n    const favoriteCity = useSelector(state => state.cityReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const deleteFavoriteCity = () => {\r\n        dispatch({ type: DELETE_FAVORITE, payload: favoriteCity.Key })\r\n    }\r\n\r\n    return (\r\n        <IconButton onClick={() => deleteFavoriteCity()} color=\"primary\" aria-label=\"add to shopping cart\">\r\n            <DeleteIcon fontSize='large' />\r\n        </IconButton>\r\n    );\r\n}\r\n","import React, { useState, } from 'react';\r\nimport { Stack } from '@mui/material';\r\nimport { AddButton } from '../addButton/AddButton';\r\nimport { RemoveButton } from '../removeButton/RemoveButton';\r\nexport const Buttons = () => {\r\n    return (\r\n        <div className=\"button-container\">\r\n            <Stack direction=\"row\" spacing={1}>\r\n                <AddButton />\r\n                <RemoveButton />\r\n            </Stack>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport const Link = ({ pathname, text }) => {\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <ListItem button onClick={() => navigate({ pathname })}>\r\n            <ListItemIcon>\r\n                <InboxIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={text}></ListItemText>\r\n        </ListItem>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport { ToggleUnit } from '../toggleUnit/ToggleUnit';\r\nimport { Link } from '../link/Link';\r\nimport { Typography } from '@mui/material';\r\nimport { ToggleTheme } from '../toggleTheme/ToggleTheme';\r\nimport { AddButton } from '../addButton/AddButton';\r\nimport { RemoveButton } from '../removeButton/RemoveButton';\r\n\r\n\r\nexport default function Sidebar() {\r\n    const [state, setState] = useState({\r\n        left: false,\r\n    });\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        setState({ [anchor]: open });\r\n    };\r\n\r\n    const sidebarsLinks = [\r\n        { pathname: \"/weather-app/favorites\", text: \"favorite\" },\r\n        { pathname: \"/weather-app\", text: \"weather\" },\r\n    ]\r\n\r\n    const list = (anchor) => (\r\n        <Box\r\n            sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 200 }}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n\r\n            <List >\r\n                {sidebarsLinks.map((link, key) => <Link key={key} pathname={link.pathname} text={link.text} />)}\r\n                <ToggleTheme />\r\n                <ToggleUnit />\r\n                <AddButton />\r\n                <RemoveButton />\r\n            </List>\r\n\r\n            <Divider />\r\n\r\n        </Box>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Button style={{ zIndex: 10 }} onClick={toggleDrawer('left', true)}><MenuIcon /></Button>\r\n            <SwipeableDrawer\r\n                anchor='left'\r\n                open={state['left']}\r\n                onClose={toggleDrawer('left', false)}\r\n                onOpen={toggleDrawer('left', true)}\r\n            >\r\n                {list('left')}\r\n            </SwipeableDrawer>\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n","import React from 'react'\r\nimport '../../styles/style.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { ToggleTheme } from '../toggleTheme/ToggleTheme';\r\nimport { ToggleUnit } from '../toggleUnit/ToggleUnit';\r\nimport { Header } from '../header/Header';\r\nimport { useSelector } from 'react-redux';\r\nimport { Buttons } from '../buttons/Buttons';\r\nimport SwipeableTemporaryDrawer from '../sidebar/Sidebar';\r\n\r\nexport const Navbar = () => {\r\n    const favoriteCity = useSelector(state => state.cityReducer);\r\n    return (\r\n        <nav className=\"navbar-container\">\r\n            <div>\r\n                <ToggleTheme />\r\n                <ToggleUnit />\r\n            </div>\r\n            <Header favoriteCity={favoriteCity} />\r\n            <ul className=\"navbar-ul\">\r\n                <li className=\"navbar-li\">\r\n                    <Link className=\"navbar-link\" to=\"/weather-app\"> Weather </Link>\r\n                </li>\r\n                <li className=\"navbar-li\">\r\n                    <Link className=\"navbar-link\" to=\"/weather-app/favorites\"> Favorites </Link>\r\n                </li>\r\n                <Buttons />\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n","\r\nexport const getCityList = (city) => {\r\n    return fetch(`https://dataservice.accuweather.com//locations/v1/cities/autocomplete?apikey=${process.env.REACT_APP_THIRD_KEY}&q=${city}&language=en-us HTTP/1.1`)\r\n        .then(res => res.json())\r\n}\r\n\r\nexport const getCityWeather = ({ Key }) => {\r\n    return fetch(`https://dataservice.accuweather.com/currentconditions/v1/${Key}?apikey=${process.env.REACT_APP_THIRD_KEY}&language=en-us&details=true`)\r\n        .then(res => res.json())\r\n\r\n}\r\n\r\nexport const getDailyForecasts = (Key) => {\r\n    return fetch(`https://dataservice.accuweather.com/forecasts/v1/daily/5day/${Key}?apikey=${process.env.REACT_APP_THIRD_KEY}`)\r\n        .then(res => res.json())\r\n}\r\n\r\nexport const getCoordinates = (Key) => {\r\n    return fetch(`https://dataservice.accuweather.com/forecasts/v1/daily/5day/${Key}?apikey=${process.env.REACT_APP_THIRD_KEY}`)\r\n        .then(res => res.json())\r\n        .then(res => console.log(res))\r\n        .catch(err => console.log(err))\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { useState, useMemo } from 'react';\r\nimport '../../styles/style.css';\r\nimport { CHANGE_CITY, UPDATE_FORCASTS } from '../../../redux/actions/types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCityList, getDailyForecasts } from '../../service/service';\r\nimport { Header } from '../header/Header';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport const Search = () => {\r\n    const [chosenCity, setChosenCity] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const weatherHandler = async () => {\r\n        let cities;\r\n        try {\r\n            cities = await getCityList(chosenCity);\r\n        } catch (e) {\r\n            toast(`Cant get ${chosenCity} forecasts`)\r\n        }\r\n        try {\r\n            const chosenCity = cityListHandler(cities);\r\n            const { DailyForecasts } = await getDailyForecasts(chosenCity.Key);\r\n            dispatch({ type: UPDATE_FORCASTS, payload: DailyForecasts })\r\n        } catch (e) {\r\n            toast(`Cant get ${chosenCity} forecasts`)\r\n        }\r\n    }\r\n\r\n    const cityListHandler = (cities) => {\r\n        dispatch({ type: CHANGE_CITY, payload: cities[0] });\r\n        return cities[0];\r\n    }\r\n\r\n    const isValidValue = (e) => {\r\n        let value = e.target.value;\r\n        value = value.replace(RegExp(/[^A-Z a-z]/gi), \"\");\r\n        setChosenCity(value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-container\">\r\n            <div className=\"search-bar\">\r\n                <input className=\"search-input\" value={chosenCity} onChange={(e) => isValidValue(e)} type=\"text\" />\r\n                <input className=\"search-button\" type=\"submit\" onClick={() => weatherHandler()} value=\"search\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport '../../styles/style.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport { motion } from \"framer-motion\";\r\nimport WbSunnyIcon from '@mui/icons-material/WbSunny';\r\nimport NightlightIcon from '@mui/icons-material/Nightlight';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const ForecastsCard = ({ forecast }) => {\r\n    const unit = useSelector(state => state.toggleReducer.toggleTemp);\r\n    const { Maximum, Minimum } = forecast.Temperature;\r\n    const { IconPhrase } = forecast.Day;\r\n    let { currentDay } = forecast;\r\n    let currentTime = new Date().toLocaleString().replace(',', '');\r\n    currentDay = new Date(currentDay).toLocaleString('en-us', { weekday: 'long' });\r\n    currentTime = currentTime.slice(currentTime.length - 2);\r\n\r\n\r\n    const variants = {\r\n        transition: { duration: 7, delay: 1.5 },\r\n        visible: { opacity: 1, y: \"0px\" },\r\n        hidden: { opacity: 0, y: \"40vh\" },\r\n    }\r\n\r\n    const isDayOrNight = () => {\r\n        return currentTime === \"AM\" ? <WbSunnyIcon variants={variants}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            component={motion.svg} style={{ color: \"yellow\", fontSize: \"3rem\" }} className={`weather-icon-${currentTime}`}\r\n        /> : <NightlightIcon variants={variants}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            component={motion.svg} style={{ color: \"black\", fontSize: \"3rem\" }} className={`weather-icon-${currentTime}`}\r\n        />\r\n    }\r\n\r\n    const convertFerToCel = (fer) => {\r\n        return Math.floor((fer - 32) * 5 / 9);\r\n    }\r\n\r\n    return (\r\n        <motion.div\r\n            className=\"ForecastsCard-container\">\r\n            <Card component={motion.div}\r\n                whileHover={{\r\n                    scale: 1.2,\r\n                    transition: { duration: 0.3 }\r\n                }}\r\n                whileTap={{ scale: 0.9 }}\r\n                className=\"ForecastsCard\" >\r\n                <CardContent className=\"card-content\">\r\n                    <Typography gutterBottom variant=\"h3\" component=\"div\">\r\n                        {currentDay}\r\n                        {isDayOrNight()}\r\n                    </Typography>\r\n                    <Typography gutterBottom variant=\"h4\" component=\"div\">\r\n                        {IconPhrase}\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" color=\"text.secondary\">\r\n                        Min:{unit === \"Imperial\" ? convertFerToCel(Minimum.Value) : Minimum.Value}\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" color=\"text.secondary\">\r\n                        Max:{unit === \"Imperial\" ? convertFerToCel(Maximum.Value) : Maximum.Value}\r\n                    </Typography>\r\n\r\n                </CardContent>\r\n                <div class=\"custom-shape-divider-bottom-1637765530\">\r\n                    <svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1200 120\" preserveAspectRatio=\"none\">\r\n                        <path\r\n                            d=\"M321.39,56.44c58-10.79,114.16-30.13,172-41.86,82.39-16.72,168.19-17.73,250.45-.39C823.78,31,906.67,72,985.66,92.83c70.05,18.48,146.53,26.09,214.34,3V0H0V27.35A600.21,600.21,0,0,0,321.39,56.44Z\"\r\n                            style={{ fill: currentTime === \"AM\" ? \"#9af2ff\" : \"#2f2b3c\" }}>\r\n\r\n                        </path>\r\n                    </svg>\r\n                </div>\r\n            </Card>\r\n\r\n        </motion.div >\r\n\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport '../styles/style.css';\r\nimport { getDailyForecasts } from '../service/service';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { DEFAULT_FORCASTS } from '../../redux/actions/types';\r\nimport { Search } from '../features/search/Search';\r\nimport { ForecastsCard } from '../features/forecastsCard/ForecastsCard';\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport const Weather = () => {\r\n    const { Key } = useSelector(state => state.cityReducer);\r\n    const { forecastsReducer } = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n\r\n    const getForecasts = async () => {\r\n        try {\r\n            const forecasts = await getDailyForecasts(Key);\r\n            dispatch({ type: DEFAULT_FORCASTS, payload: forecasts })\r\n        } catch (e) {\r\n            console.log(\"cant update forecasts\");\r\n        }\r\n    }\r\n    const ForecastsCardContainer = {\r\n        transition: { duration: 5, delay: 1.5 },\r\n        visible: { x: \"0px\" },\r\n        hidden: { x: \"100vw\" },\r\n    }\r\n\r\n    useEffect(() => {\r\n        getForecasts();\r\n    }, [Key])\r\n    return (\r\n        <div className=\"weather-container\">\r\n            <Search />\r\n            <div className=\"card-container\">\r\n                {\r\n                    forecastsReducer?.map((city, key) =>\r\n                        <ForecastsCard\r\n                            component={motion.div}\r\n                            initial=\"hidden\"\r\n                            animate=\"visible\"\r\n                            variants={ForecastsCardContainer} key={key} forecast={city} />)\r\n                }\r\n                <ToastContainer />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport '../../styles/style.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { UPDATE_FORCASTS, CHANGE_CITY } from '../../../redux/actions/types';\r\nimport { getDailyForecasts, getCityWeather } from '../../service/service';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport const FavoriteCard = ({ city }) => {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const [temp, setTemp] = useState();\r\n    const unit = useSelector(state => state.toggleReducer.toggleTemp);\r\n\r\n\r\n    const changeForecasts = async () => {\r\n        try {\r\n            const { DailyForecasts } = await getDailyForecasts(city.Key);\r\n            dispatch({ type: UPDATE_FORCASTS, payload: DailyForecasts });\r\n            dispatch({ type: CHANGE_CITY, payload: city });\r\n            navigate({ pathname: \"/weather-app\" })\r\n        } catch (e) {\r\n            toast(\"city not found\")\r\n        }\r\n    }\r\n\r\n    const getWeather = async () => {\r\n        try {\r\n            const weather = await getCityWeather(city);\r\n            const { Imperial, Metric } = weather[0].ApparentTemperature;\r\n            setTemp({ Imperial, Metric });\r\n        } catch (e) {\r\n            toast(\"can't get weather for this city\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getWeather();\r\n    }, [])\r\n    return (\r\n        <Card className=\"favoriteCard\">\r\n            <CardContent>\r\n                <Typography color=\"text.primary\">\r\n                    <Typography style={{ fontFamily: \"Assistant\", textAlign: \"center\" }} gutterBottom variant=\"h3\" component=\"div\">\r\n                        {city.LocalizedName}\r\n                    </Typography>\r\n                </Typography>\r\n                <Typography style={{ fontFamily: \"Assistant\", textAlign: \"center\" }} gutterBottom variant=\"div\" component=\"h3\">\r\n                    <Typography style={{ fontFamily: \"Assistant\", textAlign: \"center\" }} gutterBottom variant=\"h3\" component=\"div\">\r\n                        {unit}\r\n                    </Typography>\r\n                    <Typography style={{ fontFamily: \"Assistant\", textAlign: \"center\" }} gutterBottom variant=\"h3\" component=\"small\">\r\n                        {unit === \"Imperial\" ? temp?.Imperial?.Value : temp?.Metric?.Value}\r\n                    </Typography>\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button onClick={() => changeForecasts()} size=\"large\">Click here </Button>\r\n            </CardActions>\r\n            <ToastContainer />\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import '../styles/style.css'\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { FavoriteCard } from '../features/favoriteCard/FavoriteCard';\r\nimport { getCityWeather } from '../service/service';\r\nimport { Location } from '../features/location/Location';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport const Favorites = () => {\r\n    const cities = useSelector(state => state.favoriteReducer);\r\n    console.log(cities)\r\n    const [favorites, setFavorites] = useState([{}]);\r\n\r\n    const getFavorites = () => {\r\n        let favoriteCities;\r\n        try {\r\n            favoriteCities = JSON.parse(localStorage.getItem('favoriteCities'));\r\n        } catch (e) {\r\n            toast(`cant get favorite cities`)\r\n        }\r\n        try {\r\n            if (!favoriteCities) return;\r\n            mapFavoritesCities(favoriteCities);\r\n\r\n        } catch (e) {\r\n            toast(`cant get favorite cities`)\r\n        }\r\n\r\n    }\r\n\r\n    const mapFavoritesCities = (favoriteCities) => favoriteCities.forEach(async (city) => {\r\n        const currentWeather = await getCityWeather(city);\r\n        setFavorites([...favorites, currentWeather]);\r\n    });\r\n\r\n    useEffect(() => {\r\n        getFavorites();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"favorite-container\">\r\n            <div className=\"card-container\">\r\n                {\r\n                    cities?.map((city, key) => <FavoriteCard currentWeather={favorites} city={city} key={key} />)\r\n                }\r\n            </div>\r\n            {/* <Location\r\n                googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_API_KEY}.exp&libraries=geometry,drawing,places`}\r\n                loadingElement={<div style={{ height: `100%` }} />}\r\n                containerElement={<div style={{ height: `400px` }} />}\r\n                mapElement={<div style={{ height: `100%` }} />}\r\n            /> */}\r\n            <ToastContainer />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\r\n\r\n\r\nexport const Location = withScriptjs(withGoogleMap((props) =>\r\n    <GoogleMap\r\n        defaultZoom={8}\r\n        defaultCenter={{ lat: -34.397, lng: 150.644 }}\r\n    >\r\n        <Marker\r\n            position={{ lat: 34.397, lng: 150.644 }}\r\n        />\r\n    </GoogleMap>\r\n))\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { Navbar } from '../navbar/Navbar';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes, Route\r\n} from \"react-router-dom\";\r\nimport { Weather } from '../../pages/Weather';\r\nimport { Favorites } from '../../pages/Favorites';\r\nimport '../../styles/style.css';\r\nimport Sidebar from '../sidebar/Sidebar';\r\nimport { ToggleUnit } from '../toggleUnit/ToggleUnit';\r\nimport { ToggleTheme } from '../toggleTheme/ToggleTheme';\r\nimport { Header } from '../header/Header';\r\n\r\nexport const AppRouter = () => {\r\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n    const favoriteCity = useSelector(state => state.cityReducer);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", () => setWindowWidth(window.innerWidth));\r\n    }, [])\r\n    return (\r\n        <Router>\r\n            <>\r\n                <div className={windowWidth < 550 && \"layout-container\"} >\r\n                    {windowWidth > 550 ? <Navbar /> : <Sidebar />}\r\n                    {windowWidth < 550 && <Header favoriteCity={favoriteCity} />}\r\n\r\n                </div>\r\n                <Routes>\r\n                    <Route path=\"/weather-app\" exact element={<Weather />} />\r\n                    <Route path=\"/weather-app/favorites\" exact element={<Favorites />} />\r\n                </Routes>\r\n            </>\r\n        </Router >\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport '../../styles/style.css';\r\nimport { AppRouter } from '../appRouter/AppRouter';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nexport const Container = () => {\r\n    const theme = useSelector(state => state.toggleReducer.toggleTheme);\r\n\r\n    return (\r\n        <div className={theme}>\r\n            <AppRouter />\r\n        </div>\r\n    )\r\n}\r\n","import logo from './logo.svg';\r\nimport './components/styles/style.css';\r\nimport { Container } from './components/features/container/Container';\r\n\r\nfunction App() {\r\n  return (\r\n    <Container />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { ADD_FAVORITE, DELETE_FAVORITE } from \"../actions/types\";\r\n\r\nconst favoriteReducer = (favoriteCities = [], action) => {\r\n    switch (action.type) {\r\n        case ADD_FAVORITE:\r\n            if (!(favoriteCities.length) || !(favoriteCities.find(obj => obj.Key === action.payload.Key))) {\r\n                return [...favoriteCities, action.payload];\r\n            }\r\n            return favoriteCities;\r\n\r\n        case DELETE_FAVORITE:\r\n            const filterdCities = favoriteCities.filter(city => city.Key !== action.payload);\r\n            return filterdCities;\r\n\r\n        default:\r\n            return favoriteCities;\r\n    }\r\n};\r\n\r\nexport default favoriteReducer;","import { CHANGE_CITY } from \"../actions/types\";\r\n\r\nconst cityReducer = (state = { LocalizedName: \"Tel Aviv\", Key: process.env.REACT_APP_DEFUALT_CITY, WeatherText: 'Mostly cloudy' }, action) => {\r\n\r\n    switch (action.type) {\r\n        case CHANGE_CITY:\r\n            console.log(state);\r\n            const { LocalizedName, Key, WeatherText } = action.payload;\r\n            return { LocalizedName, Key, WeatherText };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default cityReducer;","import { UPDATE_FORCASTS, DEFAULT_FORCASTS } from \"../actions/types\";\r\n\r\nconst forecastsReducer = (forecasts = [], action) => {\r\n    switch (action.type) {\r\n        case UPDATE_FORCASTS:\r\n            const mapForecasts = action.payload.map(({ Temperature, Date, Day }) => { return { Temperature, currentDay: Date, Day } });\r\n            return mapForecasts;\r\n        case DEFAULT_FORCASTS:\r\n            const defualtForecasts = action.payload.DailyForecasts.map(({ Temperature, Date, Day }) => { return { Temperature, currentDay: Date, Day } });\r\n            return defualtForecasts;\r\n        default:\r\n            return forecasts;\r\n    }\r\n};\r\n\r\nexport default forecastsReducer;","import { CHANGE_THEME, CHANGE_UNIT } from \"../actions/types\";\r\n\r\nconst toggleReducer = (toggle = { toggleTheme: 'light', toggleTemp: 'Metric' }, action) => {\r\n\r\n  switch (action.type) {\r\n    case CHANGE_THEME:\r\n\r\n      if (action.payload) {\r\n        return { ...toggle, toggleTheme: 'dark' };\r\n      }\r\n      return { ...toggle, toggleTheme: 'light' };\r\n    case CHANGE_UNIT:\r\n      if (action.payload) {\r\n        return { ...toggle, toggleTemp: \"Imperial\" };\r\n      }\r\n      return { ...toggle, toggleTemp: \"Metric\" };\r\n\r\n    default:\r\n      return toggle;\r\n  }\r\n};\r\n\r\nexport default toggleReducer;","import { combineReducers } from \"redux\";\r\nimport favoriteReducer from \"./favoriteReducer\";\r\nimport cityReducer from \"./cityReducer\";\r\nimport forecastsReducer from \"./forecastsReducer\";\r\nimport toggleReducer from \"./toggleReducer\";\r\nexport default combineReducers({\r\n  toggleReducer,\r\n  favoriteReducer,\r\n  cityReducer,\r\n  forecastsReducer\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './redux/reducers/Index';\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}